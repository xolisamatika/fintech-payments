server:
  port: 8080

ledger:
  service:
    url: http://localhost:8081
    timeout-ms: 3000

resilience4j.circuitbreaker:
  instances:
    ledger:
      register-health-indicator: true
      sliding-window-size: 10
      failure-rate-threshold: 50
      wait-duration-in-open-state: 5s
      permitted-number-of-calls-in-half-open-state: 3

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/payments
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
resilience4j:
  circuitbreaker:
    instances:
      ledger:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
springdoc:
  api-docs.enabled: false
  swagger-ui.enabled: false
logging:
  level:
    root: INFO
    io.github.resilience4j: INFO

expired-transfers-scheduler:
  enabled: true
  cron: "0 0 * * * *"
  ttl-hours: 24

batch:
  core-pool-size: 10
  max-pool-size: 20
  queue-capacity: 100


